version: "3.11"

services:
  web:
    build: .
    command: sh -c "./wait-for-postgres.sh && python setup.py install && gunicorn app:app --bind 0.0.0.0:5000"
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery_worker:
    build: .
    command: sh -c "./wait-for-postgres.sh && celery -A celery_ worker --pool=solo -l info"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery_beat:
    build: .
    command: sh -c "./wait-for-postgres.sh && celery -A celery_ beat --loglevel=info"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  redis:
    image: redis:7
    ports:
      - "6380:6379"

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
